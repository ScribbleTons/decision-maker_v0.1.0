{"version":3,"sources":["logo.svg","components/header.js","components/decision-container.js","components/decision-report.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Component","DecisionContainer","props","state","question","options","option","picked","optionValue","error","handleQuestion","handleQuestionChange","bind","handleOption","handleOptionChange","saveOnEnter","handleKeyDown","setAnswer","e","preventDefault","this","setState","target","value","key","prevState","payload","updateDecision","Container","fluid","Stack","direction","gap","style","fontSize","fontWeight","FloatingLabel","controlId","label","Form","Control","as","placeholder","height","resize","onChange","map","index","type","onKeyDown","Button","onClick","DecisionReport","report","reset","questionPop","width","textAlign","marginTop","marginBottom","overflowY","count","App","questionBank","decision","showReport","processing","resetHandler","ques","result","find","temp","indexOf","prev","randomIndex","Math","floor","random","length","addToQuestionBank","setTimeout","console","log","Col","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed7abbcd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\r\nimport logo from \"./../logo.svg\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1>Decision Maker</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { Component } from \"react\";\r\nimport { Container, FloatingLabel, Form, Stack, Button } from \"react-bootstrap\";\r\nclass DecisionContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: \"\",\r\n      options: [\r\n        { option: \"Yes\", picked: false },\r\n        { option: \"No\", picked: false },\r\n        { option: \"Kinda\", picked: false },\r\n      ],\r\n      optionValue: \"\",\r\n      error: \"\",\r\n    };\r\n    this.handleQuestion = this.handleQuestionChange.bind(this);\r\n    this.handleOption = this.handleOptionChange.bind(this);\r\n    this.saveOnEnter = this.handleKeyDown.bind(this);\r\n    this.setAnswer = this.setAnswer.bind(this);\r\n  }\r\n  handleQuestionChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ error: \"\" });\r\n    this.setState({ question: e.target.value });\r\n  }\r\n  handleOptionChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ optionValue: e.target.value });\r\n  }\r\n  handleKeyDown(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.setState((prevState) => ({\r\n        options: [\r\n          ...prevState.options,\r\n          { option: prevState.optionValue, picked: false },\r\n        ],\r\n      }));\r\n      this.setState({ optionValue: \"\" });\r\n    }\r\n  }\r\n  setAnswer() {\r\n    if (!this.state.question) {\r\n      this.setState({ error: \"Ask a question\" });\r\n      return;\r\n    }\r\n    const payload = {\r\n      question: this.state.question,\r\n      options: this.state.options,\r\n    };\r\n    this.props.updateDecision(payload);\r\n    this.setState({\r\n      question: \" \",\r\n      options: [\r\n        { option: \"Yes\", picked: false },\r\n        { option: \"No\", picked: false },\r\n        { option: \"Kinda\", picked: false },\r\n      ],\r\n    });\r\n  }\r\n  render() {\r\n    let { options, optionValue, question } = this.state;\r\n    return (\r\n      <Container fluid=\"sm\" className=\"mt-4\">\r\n        <Stack direction=\"vertical\" gap={3}>\r\n          <p className=\"text-secondary text-md p-2 text-justify\" style={ { fontSize: \"20px\", fontWeight:\"600\"}}>\r\n            Ask away your question and I will pick an option for you.\r\n          </p>\r\n          {this.state.error && (\r\n            <p className=\"text-danger\"> {this.state.error} </p>\r\n          )}\r\n          <FloatingLabel controlId=\"floatingTextarea2\" label=\"Question\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Type your question\"\r\n              style={{ height: \"100px\", resize: \"none\" }}\r\n              value={question}\r\n              onChange={this.handleQuestion}\r\n            />\r\n          </FloatingLabel>\r\n          <Stack direction=\"horizontal\" gap={2} className=\"flex-wrap\">\r\n            \r\n            {options.map(({ option }, index) => (\r\n              <p\r\n                className={`bg-secondary text-light text-left te py-1 px-4`}\r\n                key={index}\r\n              >\r\n                \r\n                {option}\r\n              </p>\r\n            ))}\r\n          </Stack>\r\n          <FloatingLabel\r\n            controlId=\"floatingInput\"\r\n            label=\"Add Option. Type and press Enter\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"add option\"\r\n              value={optionValue}\r\n              onChange={this.handleOption}\r\n              onKeyDown={this.saveOnEnter}\r\n            />\r\n          </FloatingLabel>\r\n          <Button className=\"primary\" onClick={this.setAnswer}>\r\n            Get Answer\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DecisionContainer;\r\n","import { Component } from \"react\";\r\nimport { Container, Button, Stack } from \"react-bootstrap\";\r\n\r\nexport default class DecisionReport extends Component {\r\n  render() {\r\n    const { report, reset, questionPop } = this.props;\r\n    return (\r\n      <Container className=\"mt-4\">\r\n        <p\r\n          className=\"p-2 m-2 m-auto text-primary\"\r\n          style={{ fontWeight: \"700\", fontSize: \"20px\" }}\r\n        >\r\n          Decided!!\r\n        </p>\r\n        <Stack className=\"mt-2 text-left border-danger\">\r\n          <p\r\n            className=\"text-dark p-1 my-1\"\r\n            style={{ width: \"100%\", textAlign: \"left\" }}\r\n          >\r\n            <span style={{ fontWeight: \"700\" }}> Question: </span>{\" \"}\r\n            {report.question}\r\n          </p>\r\n          {report?.options.map(({ option, picked }, index) => (\r\n            <p\r\n              style={{ width: \"40%\", textAlign: \"left\", fontWeight: \"600\" }}\r\n              className={`p-1 my-1 ml-4 ${\r\n                picked ? \"checked text-light bg-info\" : \"\"\r\n              }`}\r\n              key={index}\r\n            >\r\n              {option}\r\n            </p>\r\n          ))}\r\n        </Stack>\r\n        <Button\r\n          style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n          onClick={reset}\r\n        >\r\n          Ask another Question\r\n        </Button>\r\n        <Container\r\n          style={{ height: \"400px\", overflowY: \"auto\", marginTop: \"10px\" }}\r\n        >\r\n          <Stack\r\n            gap={2}\r\n            direction=\"horizontal\"\r\n            className=\"justify-content-between mt-4\"\r\n          >\r\n            <p\r\n              className=\"p-1 m-1 text-md font-md text-primary text-center\"\r\n              style={{ fontWeight: \"700\" }}\r\n            >\r\n              Questions\r\n            </p>\r\n            <p\r\n              className=\"p-1 m-1 text-md font-md text-primary text-center\"\r\n              style={{ fontWeight: \"700\" }}\r\n            >\r\n              Popularity\r\n            </p>\r\n          </Stack>\r\n          {questionPop.map(({ question, count }, index) => (\r\n            <Stack\r\n              key={index}\r\n              gap={2}\r\n              direction=\"horizontal\"\r\n              className=\"justify-content-between mb-1\"\r\n            >\r\n              <p className=\"p-1 m-1 text-md font-md text-secondary text-center\">\r\n                {question}\r\n              </p>\r\n              <p className=\"p-1 m-1 text-md font-md text-secondary text-center\">\r\n                {count}\r\n              </p>\r\n            </Stack>\r\n          ))}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport DecisionContainer from \"./components/decision-container\";\nimport \"./App.css\";\nimport DecisionReport from \"./components/decision-report\";\nimport { Container, Col } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionBank: [],\n      decision: {},\n      showReport: false,\n      processing: false,\n    };\n    this.updateDecision = this.updateDecision.bind(this);\n    this.reset = this.resetHandler.bind(this);\n  }\n\n  addToQuestionBank(ques) {\n    const result = this.state.questionBank.find(\n      ({ question }) => question === ques.question\n    );\n\n    if (result) {\n      const temp = this.state.questionBank;\n      const index = this.state.questionBank.indexOf(result);\n      temp[index].count++;\n      this.setState({ questionBank: temp });\n      return;\n    }\n    this.setState((prev) => ({\n      questionBank: [...prev.questionBank, ques],\n    }));\n  }\n  updateDecision(decision) {\n    const randomIndex = Math.floor(Math.random() * decision.options.length);\n\n    decision.options[randomIndex].picked = true;\n\n    this.setState({ decision });\n    this.addToQuestionBank({ question: decision.question, count: 1 });\n    this.setState({ processing: true });\n  }\n\n  resetHandler() {\n    this.setState({ decision: {}, processing: false, showReport: false });\n  }\n\n  render() {\n    if (this.state.processing) {\n      setTimeout(() => {\n        this.setState({ processing: false, showReport: true });\n      }, 1000);\n    }\n    console.log(\"rendr\");\n    return (\n      <div className=\"App\">\n        <Header />\n        <Col lg=\"5\" className=\"m-auto\">\n          <Container>\n            {!this.state.showReport && !this.state.processing && (\n              <DecisionContainer updateDecision={this.updateDecision} />\n            )}\n            {this.state.processing && (\n              <p\n                className=\"bg-light text-primary mx-auto p-3\"\n                style={{ height: \"100%\", marginTop: \"60px\" }}\n              >\n                Process...\n              </p>\n            )}\n            {this.state.showReport && !this.state.processing && (\n              <DecisionReport\n                report={this.state.decision}\n                reset={this.reset}\n                questionPop={this.state.questionBank}\n              />\n            )}\n          </Container>\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}